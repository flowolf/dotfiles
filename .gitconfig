[init]
	defaultBranch = main
[user]
	# email = flowolf@example.com    # FIXXXXME
	# name = Florian Klien
[alias]
	ci = commit
	wdiff = diff --color-words
	cdiff = diff --word-diff-regex=. --color
#	st = status -s
	st = status

	sw = switch
	
	cl = clone

	cm = commit -m
	cma = commit -a -m
	ca = commit --amend
	amend = commit --amend
	caa = commit -a --amend -C HEAD
	filelog = log -u
	fl = log -u

	ai = add --interactive

	co = checkout
	br = branch 
	#"!git branch -ra | grep -v done"
	bra = branch -ra
	#list commands
	le = log --oneline --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn][%an]%C(green)(%G?)" --decorate --numstat
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn][%an]%C(green)(%G?)" --decorate
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn][%an]%C(green)(%G?)" --decorate --date=short
	ldie = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cE][%aE]%C(green)(%G?)" --decorate --date=iso
	ldi = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn][%an]%C(green)(%G?)" --decorate --date=iso
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn][%an]%C(green)(%G?)" --decorate --date=relative
	lg =  log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset%C(green)(%G?)%Creset' --abbrev-commit
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	lnc = log --pretty=format:"%h\\ %s\\ [%cn][%an]"
 	lola = log --graph --decorate --pretty=oneline --abbrev-commit --all
        # log release use like: git lr master..beta
        lr = log --pretty=format:\"- %s\"

	#list all aliases
	la = "!git config -l | grep alias | cut -c 7-"
	#diff = diff --word-diff
	d = diff --word-diff --color-words
	dis = diff --word-diff --color-words --ignore-space-change
	disw = diff --word-diff --color-words=. --ignore-space-change
	dw = diff --word-diff --color-words=.
	dc = diff --cached
	#list modified files in last commit
	dl = "!git ll -1"
	#diff last commit
	dlc = diff --cached HEAD^
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"
	branch = branch -ra

	#reset commands
	r = reset
	r1 = reset HEAD^
	r2 = reset HEAD^^
	rh = reset --hard
	rh1 = reset HEAD^ --hard
	rh2 = reset HEAD^^ --hard

	#git svn
	svnr = svn rebase
	svnd = svn dcommit
	svnl = svn log --oneline --show-commit

	#stash
	sl = stash list
	sa = stash apply
	ss = stash save
	ssk = stash save --keep-index
	ssu = stash save --include-untracked

	cp = cherry-pick
	grep = grep -Ii
	gr = grep -Ii
	#grep from root folder
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

	#grep on filename
	f = "!git ls-files | grep -i"

	#rename branch tree to done-
	#done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

	#assume aliases
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	#show assumed files
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	#unassume all the assumed files
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

	lasttag = describe --tags --abbrev=0
	lt = describe --tags --abbrev=0

	#merge
	ours = "!f() { git co --ours $@ && git add $@; }; f"
	theirs = "!f() { git co --theirs $@ && git add $@; }; f"
	logtree = log --graph --oneline --decorate --all --color
	ltd = log --oneline --graph --date=iso --pretty=format:'%Cred%h%Creset %Cgreen(%ad)%Creset%C(yellow)%d%Creset %s %Cblue[%cn - %an]%Creset' --abbrev-commit
	yolo = !git commit -m \"$(curl -s whatthecommit.com/index.txt)\"

	lab = "!lab"
	lab-i = "!lab issue"
	li = "!lab issue"

[core]
	editor = vim

[push]
	default = simple
	autoSetupRemote = true
